apiVersion: v1
kind: Secret
metadata:
  name: postgres-pw
type: Opaque
data:
  POSTGRES_PASSWORD: cG9zdGdyZXNQVw==
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      service: postgres
  template:
    metadata:
      labels:
        service: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15.2
        ports:
          - containerPort: 5432
        env:
          - name: POSTGRES_DB
            value: birds_db
          - name: POSTGRES_USER
            value: postgresUser
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:   
                name: postgres-pw
                key: POSTGRES_PASSWORD
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data"
            name: "app-pgdata"
      volumes:
        - hostPath:
            path: "/home/docker/pgdata"
          name: app-pgdata
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  type: ClusterIP
  ports:
    - port: 5455
      targetPort : 5432
  selector:
    service: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: localhost:5000/api
        env:
          - name: DB_HOST
            value: postgres-service.default.svc
          - name: DB_USER
            value: postgresUser
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:   
                name: postgres-pw
                key: POSTGRES_PASSWORD
        ports:
        - containerPort: 8090
---
apiVersion: v1
kind: Service
metadata:
  name: api-svc
spec:
  type: NodePort
  ports:
    - port: 8090
      targetPort : 8090
  selector:
    app: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  labels:
    app: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: localhost:5000/web
        env:
          - name: API_HOST
            value: k8sapp.info
          - name: API_PORT
            value: "80"
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort : 8080
  selector:
    app: web
